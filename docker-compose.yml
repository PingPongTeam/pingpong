version: "3.1"

services:
  db:
    # image: postgres:10.3-alpine
    build:
      context: ./backend/db
    restart: always
    container_name: db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: pingpong
      POSTGRES_PASSWORD: pingpongpassword
    volumes:
      - dbsessionsave:/var/lib/postgresql/data

  nodefrontend:
    build:
      context: ./frontend
      args:
        - NODE_ENV=development
    container_name: nodefrontend
    ports:
      - "80:3000"
    volumes:
      - ./frontend:/opt/app
      - notusedfront:/opt/app/node_modules
    environment:
      - NODE_ENV=development
      - REACT_APP_BACKEND_PORT=3001
      - BACKEND_URL=localhost:3001
      - PORT=3000

  nodebackend:
    build:
      context: ./backend
      args:
        - NODE_ENV=development
    container_name: nodebackend
    # either use legacy debug config or new inspect (dont really understand this yet?)
    # NOTE: if nodemon isn't restarting on changes, there can somtimes be problems with windows not seeing file changes.
    # se https://github.com/remy/nodemon#application-isnt-restarting for more information
    command: ../node_modules/.bin/nodemon --inspect=0.0.0.0:9229
    ports:
      - "3001:3001"
      - "5858:5858"
      - "9229:9229"
    volumes:
      - ./backend:/opt/app
      # this is to prevent host node_modules from accidently getting mounted in the container.
      # in case you want to use node or npm both outside container and also inside the container for test/lint etc
      # so this will overwrite the default node_modules dir in container so it won't conflict with our /opt/node_modules location
      - notusedback:/opt/app/node_modules
    environment:
      - NODE_ENV=development
      - SOCKETIO_SERVER_PORT=3001
      # - DB_HOST=db
      # - DB_PORT=5432
      - DB_URI=postgresql://pingpong:pingpongpassword@db:5432/pingpong
    links:
      - db
    depends_on:
      - db
          
volumes:
  notusedfront:
  notusedback:
  dbsessionsave:
